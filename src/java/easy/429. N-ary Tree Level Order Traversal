/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    public List<List<Integer>> levelOrder(Node root) {
         // levelresult = new ArrayList<>();
        List<List<Integer>> result = new ArrayList<>();
        // List<List<Integer>> result = new ArrayList<ArrayList<>>();
        addList(result,0,root);
        return result;
    }
    public void addList(List<List<Integer>> result,int level,Node root){
        if(root != null){
            List<Integer> levelList;
            if(level+1 > result.size()){
                levelList = new ArrayList<>();
                result.add(levelList);
            }
            else{
                levelList= result.get(level);
            }
            levelList.add(root.val);
            for(int i = 0 ;i< root.children.size();i++){
                addList(result,level+1,root.children.get(i));
            }
        }
        
    }
}
