class Solution {
    public int[] sumEvenAfterQueries(int[] A, int[][] queries) {
        int[] result = new int[A.length];
        for(int i = 0; i<queries.length ; i++){
            A[queries[i][1]] += queries[i][0];
            result[i] = evenSum(A);
        }
        return result;
    }
    public int evenSum(int[] A){
        int sum = 0;
        for(int i = 0;i< A.length;i++){
            if((A[i] %2) == 0){
                sum += A[i];
            }
        }
        return sum;
    }
}
------------------------------------------------
class Solution {
    public int[] sumEvenAfterQueries(int[] A, int[][] queries) {
        int[] result = new int[A.length];
        HashMap<Integer,Integer> evenMap = new HashMap<Integer,Integer>();
        HashMap<Integer,Integer> oddMap = new HashMap<Integer,Integer>();
        for(int i = 0;i<A.length;i++){
            if(A[i] %2 == 0){
                evenMap.put(i,A[i]);
            }
            else{
                oddMap.put(i,A[i]);
            }
        }
        for(int i = 0; i<queries.length ; i++){
            if((queries[i][0]%2 == 1) ||(queries[i][0]%2 == -1) ){
                if(evenMap.containsKey(queries[i][1])){
                    oddMap.put(queries[i][1],evenMap.get(queries[i][1])+queries[i][0]);
                    evenMap.remove(queries[i][1]);
                }
                else{
                    evenMap.put(queries[i][1],oddMap.get(queries[i][1])+queries[i][0]);
                    oddMap.remove(queries[i][1]);
                }
            }
            else{
                if(evenMap.containsKey(queries[i][1])){
                    evenMap.put(queries[i][1],evenMap.get(queries[i][1])+queries[i][0]);
                }
                else{
                    oddMap.put(queries[i][1],oddMap.get(queries[i][1])+queries[i][0]);
                }
            }
            result[i] = evenSum(evenMap);
        }
        return result;
    }
    public int evenSum(HashMap<Integer,Integer> evenMap){
        int sum = 0;
        for(int i : evenMap.values()){
            sum += i;
        }
        return sum;
    }
}
